name: Build and Push Multi-Arch Docker Images

on:
  push:
    branches:
      - main
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dockerfile:
          - 11/laravel/alpine
          - 11/laravel/debian
          - 11/lumen/alpine
          - 11/lumen/debian
        include:
          - dockerfile: 11/laravel/debian
            tag: "latest"
          - dockerfile: 11/laravel/alpine
            tag: "11-laravel-alpine"
          - dockerfile: 11/laravel/debian
            tag: "11-laravel-debian"
          - dockerfile: 11/lumen/alpine
            tag: "11-lumen-alpine"
          - dockerfile: 11/lumen/debian
            tag: "11-lumen-debian"
      fail-fast: false

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: image=moby/buildkit:latest,network=host

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Cache Docker Layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.ref_name }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ vars.IMAGE }}
        tags: |
          ${{ matrix.tag }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v6
      with:
        context: ./${{ matrix.dockerfile }}
        file: ./${{ matrix.dockerfile }}/Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        cache-from: type=registry,ref=ghcr.io/kitechsoftware/laravel-cache:cache
        cache-to: type=registry,ref=ghcr.io/kitechsoftware/laravel-cache:cache,mode=max
        tags: |
          ${{ vars.IMAGE }}:${{ matrix.tag }}

    - name: Scan Docker Image
      uses: aquasecurity/trivy-action@0.29.0
      with:
        image-ref: ${{ vars.IMAGE }}:${{ matrix.tag }}

    - name: Cleanup Cache
      if: always()
      run: rm -rf /tmp/.buildx-cache
